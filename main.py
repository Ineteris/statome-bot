from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters, ContextTypes

import logging
logging.basicConfig(level=logging.INFO)

# üëâ –í–∞—à–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
import os
BOT_TOKEN = os.environ.get("BOT_TOKEN")
CHANNEL_ID = os.environ.get("CHANNEL_ID")  # –ù–∞–ø—Ä–∏–º–µ—Ä: -1002503054673

# üü¢ –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    lang = update.effective_user.language_code
    message = "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à–µ –≤–∏–¥–µ–æ –∏–ª–∏ —Ç–µ–∫—Å—Ç–æ–≤—ã–π –æ—Ç—á—ë—Ç –ø–æ —Ä–∞–±–æ—Ç–µ." \
        if lang != 'es' else "Hola, env√≠ame tu video o informe escrito de trabajo."
    await update.message.reply_text(message)

# üü° –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–∏–¥–µ–æ
async def handle_video(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    video = update.message.video or update.message.document
    username = user.username or "–Ω–µ—Ç username"
    caption = f"–û—Ç—á—ë—Ç –æ—Ç {user.full_name} (@{username})"
    await context.bot.send_video(
        chat_id=CHANNEL_ID,
        video=video.file_id,
        caption=caption
    )
    lang = user.language_code
    reply = "–û—Ç—á—ë—Ç –ø–æ–ª—É—á–µ–Ω. –°–ø–∞—Å–∏–±–æ!" if lang != 'es' else "Informe recibido. ¬°Gracias!"
    await update.message.reply_text(reply)

# üîµ –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞
async def handle_text(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    username = user.username or "–Ω–µ—Ç username"
    text = update.message.text
    message = f"–¢–µ–∫—Å—Ç–æ–≤—ã–π –æ—Ç—á—ë—Ç –æ—Ç {user.full_name} (@{username}):\n{text}"
    await context.bot.send_message(chat_id=CHANNEL_ID, text=message)
    reply = "–¢–µ–∫—Å—Ç –ø–æ–ª—É—á–µ–Ω. –°–ø–∞—Å–∏–±–æ!" if user.language_code != 'es' else "Texto recibido. ¬°Gracias!"
    await update.message.reply_text(reply)

# üöÄ –ó–∞–ø—É—Å–∫
app = ApplicationBuilder().token(BOT_TOKEN).build()
app.add_handler(CommandHandler("start", start))
app.add_handler(MessageHandler(filters.VIDEO | filters.Document.VIDEO, handle_video))
app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_text))
app.run_polling()
